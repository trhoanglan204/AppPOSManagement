/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import javax.swing.JFrame;
import java.awt.*;
import java.util.ArrayList;
import javax.swing.SwingUtilities;
import javax.swing.event.*;
import javax.swing.table.DefaultTableModel;
import model.POSController;
import model.POSFactory;
import model.dto.*;
import ui.components.AddUpdateUserDialog;
import ui.components.CommonHandler;

/**
 *
 * @author crow
 */
public class UserUI extends javax.swing.JPanel {

    private POSController controller;
    private ArrayList<UserDTO> usersList;
    private UserDTO currentUser;
    
    /**
     * @param controller
     */
    public UserUI(POSController controller) {
        initComponents();
        this.controller = controller;
        this.currentUser = POSController.objApplicationSession.getUser();
        usernameField.setText(this.currentUser.getUsername());
        if (currentUser.getRole().equals("admin")){
            rSTableMetro1.setVisible(true);
            saveUserBtn.setVisible(true);
            deleteBtn.setVisible(true);
            populateData();
            rSTableMetro1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    handleRowSelection();
                }
            }
        });
        }
        else{
            rSTableMetro1.setVisible(false);
            saveUserBtn.setVisible(false);
            deleteBtn.setVisible(false);
        }

    }

    private void handleRowSelection() {
        // Get the selected row indices
        int selectedRow = rSTableMetro1.getSelectedRow();
        if (selectedRow != -1){
            
        }
        else{
        
        }
    }
    
    public void populateData() {
        Response res = POSFactory.getInstanceOfResponse();
        usersList = controller.getUsers(res);

        String[] columnNames = {"Username", "Role"};

        DefaultTableModel defaultTableModel = new DefaultTableModel(null, columnNames);

        for (UserDTO user : usersList) {
            Object[] rowData = {user.getUsername(), user.getRole()};
            defaultTableModel.addRow(rowData);
        }

        rSTableMetro1.setModel(defaultTableModel);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        rSTableMetro1 = new rojerusan.RSTableMetro();
        saveUserBtn = new ui.components.Button();
        deleteBtn = new ui.components.Button();
        updateBtn = new ui.components.Button();
        curUsername = new javax.swing.JLabel();
        curPassword = new javax.swing.JLabel();
        newPaswdText = new javax.swing.JLabel();
        PasswordField = new javax.swing.JPasswordField();
        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JTextField();

        rSTableMetro1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Role"
            }
        ));
        rSTableMetro1.setColorBackgoundHead(new java.awt.Color(255, 0, 51));
        rSTableMetro1.setColorFilasForeground1(new java.awt.Color(255, 0, 51));
        rSTableMetro1.setColorFilasForeground2(new java.awt.Color(255, 0, 51));
        rSTableMetro1.setColorSelBackgound(new java.awt.Color(255, 0, 51));
        jScrollPane1.setViewportView(rSTableMetro1);

        saveUserBtn.setBackground(new java.awt.Color(255, 0, 51));
        saveUserBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveUserBtn.setText("Add");
        saveUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveUserBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(255, 0, 51));
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(255, 0, 51));
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        curUsername.setText("Current Username");

        curPassword.setText("Current Password");

        newPaswdText.setText("New Password");

        PasswordField.setText("jPasswordField1");
        PasswordField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PasswordFieldMouseClicked(evt);
            }
        });

        usernameField.setText("username");
        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });

        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(saveUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(curUsername)
                            .addComponent(curPassword))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PasswordField)
                            .addComponent(usernameField)
                            .addComponent(passwordField)))
                    .addComponent(newPaswdText))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(saveUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(curUsername)
                            .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(curPassword)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newPaswdText)
                            .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveUserBtnActionPerformed
        JFrame parentFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        AddUpdateUserDialog d = new AddUpdateUserDialog(parentFrame, "Add User");
        d.setVisible(true);
        if (d.isSaveClicked()){
            UserDTO usr = d.getUser();
            Response res = new Response();
            this.controller.addUser(usr, res);
            if (res.isSuccessfull()) {
                populateData();
            }
            CommonHandler.handleResponse(res);

        }
    }//GEN-LAST:event_saveUserBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int rowIndex = rSTableMetro1.getSelectedRow();
        if (rowIndex == -1){
            Response res = new Response();
            res.messagesList.add(new Message("Please select a customer to delete.",MessageType.Error));
            CommonHandler.handleResponse(res);
            return;
        }
        UserDTO usr = new UserDTO();
        usr = this.usersList.get(rowIndex);
        Response res = new Response();
        this.controller.deleteUser(usr, res);

        if (res.isSuccessfull()) {
            populateData();
        }
        CommonHandler.handleResponse(res);
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        int rowIndex = rSTableMetro1.getSelectedRow();
        if (rowIndex == -1){
            Response res = new Response();
            res.messagesList.add(new Message("Please select a user to edit.",MessageType.Error));
            CommonHandler.handleResponse(res);
            return;
        }
        UserDTO usr = this.usersList.get(rowIndex);

        usr.setUsername((String)rSTableMetro1.getValueAt(rowIndex, 0));
        usr.setRole((String) rSTableMetro1.getValueAt(rowIndex, 1));

        Response response = new Response();
        this.controller.updatePassword(usr, response);
        if (response.isSuccessfull()) {
            populateData();
        }
        CommonHandler.handleResponse(response);
    }//GEN-LAST:event_updateBtnActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameFieldActionPerformed

    private void PasswordFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PasswordFieldMouseClicked
        // TODO add your handling code here:
        PasswordField.setText("");
    }//GEN-LAST:event_PasswordFieldMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel curPassword;
    private javax.swing.JLabel curUsername;
    private ui.components.Button deleteBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel newPaswdText;
    private javax.swing.JTextField passwordField;
    private rojerusan.RSTableMetro rSTableMetro1;
    private ui.components.Button saveUserBtn;
    private ui.components.Button updateBtn;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
